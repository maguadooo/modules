{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationGatewayName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of the Application Gateway."
            }
        },
        "backendPools": {
            "type": "array",
            "metadata": {
                "description": "Required. Backend address pool of the application gateway resource."
            }
        },
        "endpointRegistration": {
            "type": "array",
            "metadata": {
                "description": "Required. Endpoint information detailing backendPools, frontendListeners, customErrorConfigurations, HealthProbes and routingRules."
            }
        },
        "resourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Optional. Name of the resource group."
            }
        }
    },
    "functions": [
        {
            "namespace": "udf",
            "members": {
                "cleanArray": { // removes null, empty objects and duplicated elements
                    "parameters": [
                        {
                            "name": "inputArray",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "value": "[skip(
                            concat(
                                union(
                                    createArray(createObject()),
                                    createArray(null()),
                                    parameters('inputArray'),
                                    parameters('inputArray')
                                    )
                                ),
                            2)]",
                        "type": "array"
                    }
                },
                "removeInnerArrays": {
                    "parameters": [
                        {
                            "name": "inputArray",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "type": "array",
                        "value": "[json(
                            replace(replace(replace(string(parameters('inputArray')),
                                '[[','['),
                                ']]',']'),
                                '],[',',')
                        )]"
                    }
                }
            }
        }
    ],
    "variables": {
        "applicationGatewayId": "[concat(subscription().id,'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Network/applicationGateways/',parameters('applicationGatewayName'))]",
        "defaultHttpSettingsProperties": {
            "port": 443,
            "protocol": "Https",
            "cookieBasedAffinity": "Disabled",
            "pickHostNameFromBackendAddress": true,
            "requestTimeout": 30,
            "probeEnabled": false
        },
        "defaultProbe": {
            "properties": {
                "interval": 60,
                "match": {
                    "body": "",
                    "statusCodes": [
                        "200",
                        "401"
                    ]
                },
                "minServers": 3,
                "path": "/",
                "pickHostNameFromBackendHttpSettings": true,
                "protocol": "https",
                "timeout": 15,
                "unhealthyThreshold": 5
            }
        },
        "copy": [
            {
                "name": "setBackendAddressPools",
                "count": "[length(parameters('backendPools'))]",
                "input": {
                    "name": "[parameters('backendPools')[copyIndex('setBackendAddressPools')].name]",
                    "properties": {
                        "backendAddresses": "[parameters('backendPools')[copyIndex('setBackendAddressPools')].backendAddresses]"
                    }
                }
            },
            {
                "name": "setFrontEndPorts",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": {
                    "name": "[concat('port',parameters('endpointRegistration')[copyIndex('setFrontEndPorts')].frontendListener.frontendPort)]",
                    "properties": {
                        "port": "[parameters('endpointRegistration')[copyIndex('setFrontEndPorts')].frontendListener.frontendPort]"
                    }
                }
            },
            {
                "name": "mainHttpSettings",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": "[if(
                    contains(parameters('endpointRegistration')[copyindex('mainHttpSettings')],'routingRule'),
                    if(
                        contains(parameters('endpointRegistration')[copyindex('mainHttpSettings')].routingRule.httpSettings,'properties'),
                        createObject(
                            'name',parameters('endpointRegistration')[copyIndex('mainHttpSettings')].routingRule.httpSettings.name,
                            'properties',union(
                                variables('defaultHttpSettingsProperties'),
                                parameters('endpointRegistration')[copyIndex('mainHttpSettings')].routingRule.httpSettings.properties,
                                createObject(
                                    'probeEnabled', contains(parameters('endpointRegistration')[copyIndex('mainHttpSettings')].routingRule.httpSettings.properties,'probe'),
                                    'probe', if(
                                        contains(parameters('endpointRegistration')[copyIndex('mainHttpSettings')].routingRule.httpSettings.properties,'probe'),
                                            createObject(
                                                'id',concat(variables('applicationGatewayId'),'/probes/',parameters('endpointRegistration')[copyIndex('mainHttpSettings')].routingRule.httpSettings.properties.probe.name)
                                            ),
                                            null()
                                        )
                                    )
                                )
                            ),
                        createObject()
                    ),
                    createObject()
                )]"
            },
            {
                "name": "mainProbes",
                "count": "[length(variables('mainHttpSettings'))]",
                "input": "[
                    if(contains(variables('mainHttpSettings')[copyIndex('mainProbes')],'properties'),
                        if(contains(variables('mainHttpSettings')[copyIndex('mainProbes')].properties,'probe'),
                            union(variables('defaultProbe'),variables('mainHttpSettings')[copyIndex('mainProbes')].properties.probe),
                            createObject()
                        ),
                        createObject()                                                        
                    )
                ]"
            },
            {
                "name": "mainRedirectConfig",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": "[if(
                    contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')],'redirectConfig'),
                    createObject(
                        'name', parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.name,
                        'properties', createObject(
                            'includePath', if(contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig,'includePath'),parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.includePath,json('null')),
                            'includeQueryString', if(contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig,'includeQueryString'),parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.includeQueryString,json('null')),
                            'redirectType', if(contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig,'redirectType'),parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.redirectType,json('null')),
                            'targetUrl', if(contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig,'targetUrl'),parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.targetUrl,json('null')),
                            'targetListener', if(
                                contains(parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig,'targetListener'),
                                createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration')[copyIndex('mainRedirectConfig')].redirectConfig.targetListener)),
                                json('null')
                            )
                        )
                    ),
                    createObject()
                )]"
            },
            {
                "name": "sslCertificates",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": "[if(
                    contains(parameters('endpointRegistration')[copyIndex('sslCertificates')].frontendListener,'sslCertificate'),
                    parameters('endpointRegistration')[copyIndex('sslCertificates')].frontendListener.sslCertificate,
                    createObject()
                )]"
            },
            {
                "name": "setHttpListeners",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": {
                    "name": "[parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.name]",
                    "properties": {
                        "customErrorConfigurations": "[if(
                            contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')],'customErrorConfigurations'),
                            parameters('endpointRegistration')[copyIndex('setHttpListeners')].customErrorConfigurations,
                            json('null')
                        )]",
                        "firewallPolicy": "[if(
                            contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')],'firewallPolicyid'),
                            createObject('id',parameters('endpointRegistration')[copyIndex('setHttpListeners')].firewallPolicyid),
                            json('null')
                        )]",
                        "frontendIPConfiguration": {
                            "id": "[concat(variables('applicationGatewayId'),'/frontendIPConfigurations/',parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.frontendIp)]"
                        },
                        "frontendPort": {
                            "id": "[concat(variables('applicationGatewayId'),'/frontendPorts/',concat('port',parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.frontendPort))]"
                        },
                        "hostname": "[if(
                            and(
                                contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener,'hostNames'),
                                equals(length(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.hostNames),1)
                            ),
                            parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.hostnames[0],
                            json('null')
                        )]",
                        "hostnames": "[if(
                            and(
                                contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener,'hostNames'),
                                greater(length(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.hostNames),1)
                            ),
                            parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.hostnames,
                            json('null')
                        )]",
                        "protocol": "[parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.protocol]",
                        "requireServerNameIndication": "[if(
                            contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener,'requireServerNameIndication'),
                            parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.requireServerNameIndication,
                            json('null')
                        )]",
                        "sslCertificate": "[if(
                            contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener,'sslCertificate'),
                            createObject('id',concat(variables('applicationGatewayId'),'/sslCertificates/',parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.sslCertificate.name)),
                            json('null')
                        )]",
                        "sslProfile": "[if(
                            contains(parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener,'sslProfile'),
                            createObject('id',concat(variables('applicationGatewayId'),'/sslProfiles/',parameters('endpointRegistration')[copyIndex('setHttpListeners')].frontendListener.sslProfile)),
                            json('null')
                        )]"
                    }
                }
            },
            {
                "name": "setRequestRoutingRules",
                "count": "[length(parameters('endpointRegistration'))]",
                "input": "[if(
                    contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')],'routingRule'),
                    if(
                        contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')],'pathBasedRouting'),
                        createObject(
                            'name', parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.name,
                            'properties', createObject(
                                'ruleType', 'PathBasedRouting',
                                'httpListener', createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].frontendListener.name)),
                                'urlPathMap', createObject('id',concat(variables('applicationGatewayId'),'/urlPathMaps/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.name)),
                                'rewriteRuleSet',if(
                                    contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule,'rewriteRuleSet'),
                                    createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.rewriteRuleSet)),
                                    json('null')
                                )
                            )
                        ),
                        createObject(
                            'name', parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.name,
                            'properties', createObject(
                                'ruleType', 'Basic',
                                'httpListener', createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].frontendListener.name)),
                                'backendAddressPool', createObject('id',concat(variables('applicationGatewayId'),'/backendAddressPools/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.backendPool)),
                                'backendHttpSettings', createObject('id',concat(variables('applicationGatewayId'),'/backendHttpSettingsCollection/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.httpSettings.name)),
                                'rewriteRuleSet',if(
                                    contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule,'rewriteRuleSet'),
                                    createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].routingRule.rewriteRuleSet)),
                                    json('null')
                                )
                            )
                        )
                    ),
                    if(
                        contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')],'pathBasedRouting'),
                        createObject(
                            'name', parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.name,
                            'properties', createObject(
                                'ruleType', 'PathBasedRouting',
                                'httpListener', createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].frontendListener.name)),
                                'urlPathMap', createObject('id',concat(variables('applicationGatewayId'),'/urlPathMaps/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.name)),
                                'rewriteRuleSet',if(
                                    contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig,'rewriteRuleSet'),
                                    createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.rewriteRuleSet)),
                                    json('null')
                                )
                            )
                        ),
                        createObject(
                            'name', parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.name,
                            'properties', createObject(
                                'ruleType', 'Basic',
                                'httpListener', createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].frontendListener.name)),
                                'redirectConfiguration', createObject('id',concat(variables('applicationGatewayId'),'/redirectConfigurations/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.name)),
                                'rewriteRuleSet',if(
                                    contains(parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig,'rewriteRuleSet'),
                                    createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration')[copyIndex('setRequestRoutingRules')].redirectConfig.rewriteRuleSet)),
                                    json('null')
                                )
                            )
                        )
                    )
                )]"
            }
        ],
        "setSSLCertificates": "[udf.cleanArray(variables('sslCertificates'))]"
    },
    "resources": [
        {
            "name": "nestedDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "resourceGroupName": {
                        "value": "[parameters('resourceGroupName')]"
                    },
                    "applicationGatewayName": {
                        "value": "[parameters('applicationGatewayName')]"
                    },
                    "endpointRegistration": {
                        "value": "[parameters('endpointRegistration')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "resourceGroupName": {
                            "type": "string"
                        },
                        "endpointRegistration": {
                            "type": "array"
                        },
                        "applicationGatewayName": {
                            "type": "string"
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat('loopDeploy-',copyIndex())]",
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2021-04-01",
                            "copy": {
                                "name": "endpointregcopy",
                                "count": "[length(parameters('endpointRegistration'))]"
                            },
                            "properties": {
                                "mode": "Incremental",
                                "parameters": {
                                    "resourceGroupName": {
                                        "value": "[parameters('resourceGroupName')]"
                                    },
                                    "applicationGatewayName": {
                                        "value": "[parameters('applicationGatewayName')]"
                                    },
                                    "endpointRegistration": {
                                        "value": "[parameters('endpointRegistration')[copyIndex('endpointregcopy')]]"
                                    }
                                },
                                "expressionEvaluationOptions": {
                                    "scope": "Inner"
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "resourceGroupName": {
                                            "type": "string"
                                        },
                                        "applicationGatewayName": {
                                            "type": "string"
                                        },
                                        "endpointRegistration": {
                                            "type": "object"
                                        }
                                    },
                                    "variables": {
                                        "applicationGatewayId": "[concat(subscription().id,'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Network/applicationGateways/',parameters('applicationGatewayName'))]",
                                        "pathBasedRoutingLength": "[if(
                                            contains(parameters('endpointRegistration'),'pathBasedRouting'),
                                            length(parameters('endpointRegistration').pathBasedRouting),
                                            0
                                        )]",
                                        "defaultHttpSettingsProperties": {
                                            "port": 443,
                                            "protocol": "Https",
                                            "cookieBasedAffinity": "Disabled",
                                            "pickHostNameFromBackendAddress": true,
                                            "requestTimeout": 30,
                                            "probeEnabled": false
                                        },
                                        "defaultProbe": {
                                            "properties": {
                                                "interval": 60,
                                                "match": {
                                                    "body": "",
                                                    "statusCodes": [
                                                        "200",
                                                        "401"
                                                    ]
                                                },
                                                "minServers": 3,
                                                "path": "/",
                                                "pickHostNameFromBackendHttpSettings": true,
                                                "protocol": "https",
                                                "timeout": 15,
                                                "unhealthyThreshold": 5
                                            }
                                        },
                                        "copy": [
                                            {
                                                "name": "pathRoutingHttpSettings",
                                                "count": "[variables('pathBasedRoutingLength')]",
                                                "input": "[if(
                                                    equals(toLower(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].type),'backendpool') ,
                                                    if(
                                                        contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings,'properties'),
                                                        createObject(
                                                            'name',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings.name,
                                                            'properties',union(
                                                                variables('defaultHttpSettingsProperties'),
                                                                parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings.properties,
                                                                createObject(
                                                                    'probeEnabled', contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings.properties,'probe'),
                                                                    'probe', if(
                                                                        contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings.properties,'probe'),
                                                                            createObject(
                                                                                'id',concat(variables('applicationGatewayId'),'/probes/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingHttpSettings')].httpSettings.properties.probe.name)
                                                                            ),
                                                                            null()
                                                                        )
                                                                    )
                                                                )
                                                            ),
                                                        createObject()
                                                    ),
                                                    createObject()
                                                )]"
                                            },
                                            {
                                                "name": "pathRoutingredirectConfig",
                                                "count": "[variables('pathBasedRoutingLength')]",
                                                "input": "[if(
                                                    equals(toLower(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].type),'redirection'),
                                                    createObject(
                                                        'name', concat(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].name),
                                                        'properties', createObject(
                                                            'includePath', if(contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')],'includePath'),parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].includePath,json('null')),
                                                            'includeQueryString', if(contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')],'includeQueryString'),parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].includeQueryString,json('null')),
                                                            'redirectType', if(contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')],'redirectType'),parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].redirectType,json('null')),
                                                            'targetUrl', if(contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')],'targetUrl'),parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].targetUrl,json('null')),
                                                            'targetListener', if(
                                                                contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')],'targetListener'),
                                                                createObject('id',concat(variables('applicationGatewayId'),'/httpListeners/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRoutingredirectConfig')].targetListener)),
                                                                json('null')
                                                            )
                                                        )
                                                    ),
                                                    createObject()
                                                )]"
                                            },
                                            {
                                                "name": "pathRules",
                                                "count": "[variables('pathBasedRoutingLength')]",
                                                "input": "[
                                                    if(equals(toLower(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].type),'backendpool'),
                                                    createObject(
                                                        'name',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].name,
                                                        'properties',createObject(
                                                            'backendAddressPool',createObject('id',concat(variables('applicationGatewayId'),'/backendAddressPools/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].backendPool)),
                                                            'backendHttpSettings',createObject('id',concat(variables('applicationGatewayId'),'/backendHttpSettingsCollection/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].httpSettings.name)),
                                                            'paths',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].paths,
                                                            'rewriteRuleSet', if(
                                                                contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')],'rewriteRuleSet'),
                                                                createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].rewriteRuleSet)),
                                                                json('null')
                                                            )
                                                        )
                                                    ),
                                                    createObject(
                                                        'name',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].name,
                                                        'properties',createObject(
                                                            'redirectConfiguration',createObject('id',concat(variables('applicationGatewayId'),'/redirectConfigurations/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].name)),
                                                            'paths',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].paths,
                                                            'rewriteRuleSet', if(
                                                                contains(parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')],'rewriteRuleSet'),
                                                                createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration').pathBasedRouting[copyIndex('pathRules')].rewriteRuleSet)),
                                                                json('null')
                                                            )
                                                        )
                                                    )    
                                                )]"
                                            },
                                            {
                                                "name": "pathRoutingProbes",
                                                "count": "[length(variables('pathRoutingHttpSettings'))]",
                                                "input": "[
                                                    if(contains(variables('pathRoutingHttpSettings')[copyIndex('pathRoutingProbes')],'properties'),
                                                        if(contains(variables('pathRoutingHttpSettings')[copyIndex('pathRoutingProbes')].properties,'probe'),
                                                            union(variables('defaultProbe'),variables('pathRoutingHttpSettings')[copyIndex('pathRoutingProbes')].properties.probe),
                                                            createObject()
                                                        ),
                                                        createObject()                                                        
                                                    )
                                                ]"
                                            }
                                        ],
                                        "urlPathMaps": "[if(
                                            contains(parameters('endpointRegistration'),'pathBasedRouting'),
                                            createArray(
                                                createObject(
                                                    'name', if(
                                                        contains(parameters('endpointRegistration'),'routingRule'),
                                                        concat(parameters('endpointRegistration').routingRule.name),
                                                        concat(parameters('endpointRegistration').redirectConfig.name)
                                                    ),
                                                    'properties', createObject(
                                                        'pathRules', variables('pathRules'),
                                                        'defaultBackendAddressPool', if(
                                                            contains(parameters('endpointRegistration'),'routingRule'),
                                                            createObject('id',concat(variables('applicationGatewayId'),'/backendAddressPools/',parameters('endpointRegistration').routingRule.backendPool)),
                                                            json('null')
                                                        ),
                                                        'defaultBackendHttpSettings', if(
                                                            contains(parameters('endpointRegistration'),'routingRule'),
                                                            createObject('id',concat(variables('applicationGatewayId'),'/backendHttpSettingsCollection/',parameters('endpointRegistration').routingRule.httpSettings.name)),
                                                            json('null')
                                                        ),
                                                        'defaultRedirectConfiguration', if(
                                                            contains(parameters('endpointRegistration'),'redirectConfig'),
                                                            createObject('id',concat(variables('applicationGatewayId'),'/redirectConfigurations/',parameters('endpointRegistration').redirectConfig.name)),
                                                            json('null')
                                                        ),
                                                        'defaultRewriteRuleSet', if(
                                                            contains(parameters('endpointRegistration'),'rewriteRuleSet'),
                                                            createObject('id',concat(variables('applicationGatewayId'),'/rewriteRuleSets/',parameters('endpointRegistration').pathBasedRouting.rewriteRuleSet)),
                                                            json('null')
                                                        )
                                                    )
                                                )
                                            ),
                                            createArray()
                                        )]"
                                    },
                                    "resources": [],
                                    "outputs": {
                                        "pathRoutingHttpSettings": {
                                            "type": "array",
                                            "value": "[variables('pathRoutingHttpSettings')]"
                                        },
                                        "pathRoutingredirectConfig": {
                                            "type": "array",
                                            "value": "[variables('pathRoutingredirectConfig')]"
                                        },
                                        "pathRoutingProbes": {
                                            "type": "array",
                                            "value": "[variables('pathRoutingProbes')]"
                                        },
                                        "urlPathMaps": {
                                            "type": "array",
                                            "value": "[variables('urlPathMaps')]"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "outputs": {
                        "pathRoutingHttpSettings": {
                            "type": "array",
                            "copy": {
                                "count": "[length(parameters('endpointRegistration'))]",
                                "input": "[reference(concat('loopDeploy-',copyIndex())).outputs.pathRoutingHttpSettings.value]"
                            }
                        },
                        "pathRoutingredirectConfig": {
                            "type": "array",
                            "copy": {
                                "count": "[length(parameters('endpointRegistration'))]",
                                "input": "[reference(concat('loopDeploy-',copyIndex())).outputs.pathRoutingredirectConfig.value]"
                            }
                        },
                        "pathRoutingProbes": {
                            "type": "array",
                            "copy": {
                                "count": "[length(parameters('endpointRegistration'))]",
                                "input": "[reference(concat('loopDeploy-',copyIndex())).outputs.pathRoutingProbes.value]"
                            }
                        },
                        "urlPathMaps": {
                            "type": "array",
                            "copy": {
                                "count": "[length(parameters('endpointRegistration'))]",
                                "input": "[reference(concat('loopDeploy-',copyIndex())).outputs.urlPathMaps.value]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "backendAddressPools": {
            "type": "array",
            "value": "[variables('setBackendAddressPools')]"
        },
        "backendHttpSettingsCollection": {
            "type": "array",
            "value": "[udf.cleanArray(concat(variables('mainHttpSettings'),udf.removeInnerArrays(reference('nestedDeployment').outputs.pathRoutingHttpSettings.value)))]"
        },
        "frontEndPorts": {
            "type": "array",
            "value": "[variables('setFrontEndPorts')]"
        },
        "httpListeners": {
            "type": "array",
            "value": "[variables('setHttpListeners')]"
        },
        "probes": {
            "type": "array",
            "value": "[udf.cleanArray(concat(variables('mainProbes'),udf.removeInnerArrays(reference('nestedDeployment').outputs.pathRoutingProbes.value)))]"
        },
        "redirectConfigurations": {
            "type": "array",
            "value": "[udf.cleanArray(concat(variables('mainRedirectConfig'),udf.removeInnerArrays(reference('nestedDeployment').outputs.pathRoutingredirectConfig.value)))]"
        },
        "requestRoutingRules": {
            "type": "array",
            "value": "[variables('setRequestRoutingRules')]"
        },
        "SSLCertificates": {
            "type": "array",
            "value": "[variables('setSSLCertificates')]"
        },
        "urlPathMaps": {
            "type": "array",
            "value": "[udf.cleanArray(udf.removeInnerArrays(reference('nestedDeployment').outputs.urlPathMaps.value))]"
        }
    }
}

